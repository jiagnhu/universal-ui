{"version":3,"file":"index.esm.js","sources":["../src/components/button/uds-button.js","../src/components/radio/uds-radio.js","../src/components/radio/uds-radio-group.js","../src/components/checkbox/uds-checkbox.js","../src/components/checkbox/uds-checkbox-group.js","../src/index.js"],"sourcesContent":["// @ts-nocheck\n\n// UDS Button Component\nclass UdsButton extends HTMLElement {\n  // Define private properties\n  _button = null;\n  \n  static get observedAttributes() {\n    return ['type', 'outline', 'text', 'ghost', 'size', 'round', 'disabled', 'loading', 'focused'];\n  }\n\n  constructor() {\n    super();\n    this._onClick = this._onClick.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this.attachShadow({ mode: 'open' });\n    this._render();\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('size');\n    this._upgradeProperty('disabled');\n    this._upgradeProperty('loading');\n    this._upgradeProperty('type');\n    this._upgradeProperty('round');\n    this._upgradeProperty('outline');\n    this._upgradeProperty('text');\n    this._upgradeProperty('ghost');\n\n    this.setAttribute('role', 'button');\n    this.tabIndex = this.disabled ? -1 : 0;\n    this.addEventListener('click', this._onClick);\n    this.addEventListener('keydown', this._onKeyDown);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('click', this._onClick);\n    this.removeEventListener('keydown', this._onKeyDown);\n  }\n\n  attributeChangedCallback() {\n    this._updateState();\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n\n  async _render() {\n    if (!this.shadowRoot) return;\n    \n    // 加载CSS\n    const linkElem = document.createElement('link');\n    linkElem.setAttribute('rel', 'stylesheet');\n    linkElem.setAttribute('href', new URL('./uds-button.css', import.meta.url).href);\n    this.shadowRoot.appendChild(linkElem);\n    \n    // 加载HTML模板\n    try {\n      const response = await fetch(new URL('./uds-button.html', import.meta.url).href);\n      const templateText = await response.text();\n      const template = document.createElement('template');\n      template.innerHTML = templateText;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      \n      // 获取按钮元素引用\n      this._button = this.shadowRoot.querySelector('.button');\n      this._updateState();\n    } catch (error) {\n      console.error('Failed to load button template:', error);\n    }\n  }\n\n  _updateState() {\n    if (!this._button) return;\n    \n    // 处理variant属性（优先）\n    this._button.classList.remove('button--solid', 'button--outline', 'button--ghost', 'button--text');\n    if (this.hasAttribute('variant')) {\n      const variant = this.getAttribute('variant');\n      this._button.classList.add(`button--${variant}`);\n    } else if (this.text) {\n      // 如果有text属性，应用文本按钮样式\n      this._button.classList.add('button--text');\n    } else if (this.ghost) {\n      // 如果有ghost属性，应用幽灵按钮样式\n      this._button.classList.add('button--ghost');\n    } else if (this.outline) {\n      // 如果没有variant但有outline属性\n      this._button.classList.add('button--outline');\n    } else if (this.hasAttribute('type')) {\n      // 如果有type属性但没有variant和outline\n      this._button.classList.add('button--solid');\n    } else {\n      // 默认为solid（实心按钮）\n      this._button.classList.add('button--solid');\n    }\n    \n    // Update type\n    this._button.classList.remove('button--primary', 'button--secondary', 'button--danger');\n    if (this.hasAttribute('type')) {\n      const type = this.type || 'primary';\n      this._button.classList.add(`button--${type}`);\n    } else {\n      // 默认为primary类型\n      this._button.classList.add('button--primary');\n    }\n    \n    // Update size\n    this._button.classList.remove('button--sm', 'button--lg');\n    if (this.size && this.size !== 'md') {\n      this._button.classList.add(`button--${this.size}`);\n    }\n    \n    // Update shape\n    this._button.classList.remove('button--round');\n    if (this.round) {\n      this._button.classList.add('button--round');\n    }\n    \n    // Update disabled state\n    this._button.disabled = this.disabled;\n    this._button.setAttribute('aria-disabled', String(this.disabled));\n    \n    // Update loading state\n    if (this.loading) {\n      this._button.classList.add('button--loading');\n      this._button.setAttribute('aria-busy', 'true');\n    } else {\n      this._button.classList.remove('button--loading');\n      this._button.removeAttribute('aria-busy');\n    }\n  }\n\n  _onClick(event) {\n    if (this.disabled || this.loading) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    \n    // Dispatch custom event\n    this.dispatchEvent(new CustomEvent('uds-click', {\n      bubbles: true,\n      composed: true,\n      detail: { originalEvent: event }\n    }));\n  }\n\n  _onKeyDown(event) {\n    if (this.disabled || this.loading) return;\n    \n    // Handle space and enter keys\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      if (this._button) {\n        this._button.click();\n      }\n    }\n  }\n\n  // Properties\n  get outline() {\n    return this.hasAttribute('outline');\n  }\n  \n  set outline(value) {\n    if (value) {\n      this.setAttribute('outline', '');\n    } else {\n      this.removeAttribute('outline');\n    }\n  }\n  \n  get size() {\n    return this.getAttribute('size');\n  }\n  \n  set size(value) {\n    if (value === null) {\n      this.removeAttribute('size');\n    } else {\n      this.setAttribute('size', value);\n    }\n  }\n  \n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  \n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n    \n    this.tabIndex = value ? -1 : 0;\n  }\n  \n  get loading() {\n    return this.hasAttribute('loading');\n  }\n  \n  set loading(value) {\n    if (value) {\n      this.setAttribute('loading', '');\n    } else {\n      this.removeAttribute('loading');\n    }\n  }\n  \n  get round() {\n    return this.hasAttribute('round');\n  }\n  \n  set round(value) {\n    if (value) {\n      this.setAttribute('round', '');\n    } else {\n      this.removeAttribute('round');\n    }\n  }\n  \n  get type() {\n    return this.getAttribute('type') || 'primary';\n  }\n  \n  set type(value) {\n    if (value === null) {\n      this.removeAttribute('type');\n    } else {\n      this.setAttribute('type', value);\n    }\n  }\n  \n  get text() {\n    return this.hasAttribute('text');\n  }\n  \n  set text(value) {\n    if (value) {\n      this.setAttribute('text', '');\n    } else {\n      this.removeAttribute('text');\n    }\n  }\n  \n  get ghost() {\n    return this.hasAttribute('ghost');\n  }\n  \n  set ghost(value) {\n    const isGhost = Boolean(value);\n    if (isGhost) {\n      this.setAttribute('ghost', '');\n    } else {\n      this.removeAttribute('ghost');\n    }\n    this._updateState();\n  }\n  \n\n  \n  // 自动检测是否有 counter 内容\n  get hasCounter() {\n    const slot = this.shadowRoot.querySelector('slot[name=\"counter\"]');\n    return slot && slot.assignedNodes().length > 0;\n  }\n  \n  get focused() {\n    return this.hasAttribute('focused');\n  }\n  \n  set focused(value) {\n    if (value) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n  }\n}\n\n// Register the custom element\ncustomElements.define('uds-button', UdsButton);\n\nexport default UdsButton;","// @ts-nocheck\n\n// UDS Radio Component\nclass UdsRadio extends HTMLElement {\n  // Define private properties\n  _container = null;\n  _input = null;\n  \n  static get observedAttributes() {\n    return ['size', 'disabled', 'checked', 'name', 'value', 'text', 'ghost', 'outline', 'solid'];\n  }\n\n  constructor() {\n    super();\n    this._onClick = this._onClick.bind(this);\n    this.attachShadow({ mode: 'open' });\n    this._render();\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('type');\n    this._upgradeProperty('size');\n    this._upgradeProperty('disabled');\n    this._upgradeProperty('checked');\n    this._upgradeProperty('name');\n    this._upgradeProperty('value');\n    this._upgradeProperty('text');\n    this._upgradeProperty('ghost');\n    this._upgradeProperty('outline');\n    this._upgradeProperty('solid');\n\n    this.addEventListener('click', this._onClick);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('click', this._onClick);\n  }\n\n  attributeChangedCallback() {\n    this._updateState();\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n  \n  // 自动检测是否有 counter 内容\n  get hasCounter() {\n    const slot = this.shadowRoot.querySelector('slot[name=\"counter\"]');\n    return slot && slot.assignedNodes().length > 0;\n  }\n  \n  // 自动检测是否有描述内容\n  get hasDescription() {\n    return this.getAttribute('description') && this.getAttribute('description').trim() !== '';\n  }\n\n  async _render() {\n    if (!this.shadowRoot) return;\n    \n    // 加载CSS\n    const linkElem = document.createElement('link');\n    linkElem.setAttribute('rel', 'stylesheet');\n    linkElem.setAttribute('href', new URL('./uds-radio.css', import.meta.url).href);\n    this.shadowRoot.appendChild(linkElem);\n    \n    // 加载HTML模板\n    try {\n      const response = await fetch(new URL('./uds-radio.html', import.meta.url).href);\n      const templateText = await response.text();\n      const template = document.createElement('template');\n      template.innerHTML = templateText;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      \n      // 获取元素引用\n      this._container = this.shadowRoot.querySelector('.radio-container');\n      this._input = this.shadowRoot.querySelector('.radio-input');\n      this._updateState();\n    } catch (error) {\n      console.error('Failed to load radio template:', error);\n    }\n  }\n\n  _updateState() {\n    if (!this._container || !this._input) return;\n    \n    // 处理类型\n    this._container.classList.remove('primary', 'secondary', 'danger');\n    if (this.hasAttribute('type')) {\n      const type = this.getAttribute('type');\n      this._container.classList.add(type);\n    } else {\n      this._container.classList.add('primary'); // 默认为primary\n    }\n    \n    // 处理样式\n    this._container.classList.remove('style-text', 'style-ghost', 'style-outline', 'style-solid');\n    if (this.hasAttribute('text')) {\n      this._container.classList.add('style-text');\n    } else if (this.hasAttribute('ghost')) {\n      this._container.classList.add('style-ghost');\n    } else if (this.hasAttribute('outline')) {\n      this._container.classList.add('style-outline');\n    } else if (this.hasAttribute('solid')) {\n      this._container.classList.add('style-solid');\n    } else {\n      this._container.classList.add('style-text'); // 默认为text样式\n    }\n    \n    // 处理尺寸\n    this._container.classList.remove('size-sm', 'size-md', 'size-lg');\n    if (this.hasAttribute('size')) {\n      const size = this.getAttribute('size');\n      this._container.classList.add(`size-${size}`);\n    } else {\n      this._container.classList.add('size-md'); // 默认为中等尺寸\n    }\n    \n    // 处理禁用状态\n    if (this.hasAttribute('disabled')) {\n      this._container.classList.add('disabled');\n      this._input.disabled = true;\n    } else {\n      this._container.classList.remove('disabled');\n      this._input.disabled = false;\n    }\n    \n    // 处理选中状态\n    this._input.checked = this.hasAttribute('checked');\n    \n    // 处理name和value\n    if (this.hasAttribute('name')) {\n      this._input.name = this.getAttribute('name');\n    }\n    \n    if (this.hasAttribute('value')) {\n      this._input.value = this.getAttribute('value');\n    }\n    \n    // 更新描述\n    this._updateDescription();\n  }\n  \n  \n  _updateDescription() {\n    const descriptionElement = this.shadowRoot.querySelector('.description');\n    if (descriptionElement) {\n      const description = this.getAttribute('description') || '';\n      descriptionElement.textContent = description;\n    }\n  }\n\n  _onClick() {\n    if (this.disabled) return;\n    \n    this.checked = true;\n    \n    // 触发change事件\n    this.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        checked: this.checked,\n        value: this.value\n      }\n    }));\n  }\n\n  // Getters/Setters\n  get type() {\n    return this.getAttribute('type');\n  }\n  \n  set type(value) {\n    if (value) {\n      this.setAttribute('type', value);\n    } else {\n      this.removeAttribute('type');\n    }\n  }\n  \n  get text() {\n    return this.hasAttribute('text');\n  }\n  \n  set text(value) {\n    if (value) {\n      this.setAttribute('text', '');\n    } else {\n      this.removeAttribute('text');\n    }\n  }\n  \n  get ghost() {\n    return this.hasAttribute('ghost');\n  }\n  \n  set ghost(value) {\n    if (value) {\n      this.setAttribute('ghost', '');\n    } else {\n      this.removeAttribute('ghost');\n    }\n  }\n  \n  get outline() {\n    return this.hasAttribute('outline');\n  }\n  \n  set outline(value) {\n    if (value) {\n      this.setAttribute('outline', '');\n    } else {\n      this.removeAttribute('outline');\n    }\n  }\n  \n  get solid() {\n    return this.hasAttribute('solid');\n  }\n  \n  set solid(value) {\n    if (value) {\n      this.setAttribute('solid', '');\n    } else {\n      this.removeAttribute('solid');\n    }\n  }\n  \n  get size() {\n    return this.getAttribute('size');\n  }\n  \n  set size(value) {\n    if (value) {\n      this.setAttribute('size', value);\n    } else {\n      this.removeAttribute('size');\n    }\n  }\n  \n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  \n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n  \n  get checked() {\n    return this.hasAttribute('checked');\n  }\n  \n  set checked(value) {\n    if (value) {\n      this.setAttribute('checked', '');\n    } else {\n      this.removeAttribute('checked');\n    }\n  }\n  \n  get name() {\n    return this.getAttribute('name');\n  }\n  \n  set name(value) {\n    if (value) {\n      this.setAttribute('name', value);\n    } else {\n      this.removeAttribute('name');\n    }\n  }\n  \n  get value() {\n    return this.getAttribute('value');\n  }\n  \n  set value(value) {\n    if (value) {\n      this.setAttribute('value', value);\n    } else {\n      this.removeAttribute('value');\n    }\n  }\n}\n\n// 注册组件\ncustomElements.define('uds-radio', UdsRadio);\n\nexport default UdsRadio;","// @ts-nocheck\n\n// UDS RadioGroup Component\nclass UdsRadioGroup extends HTMLElement {\n  // Define private properties\n  _container = null;\n  \n  static get observedAttributes() {\n    return ['type', 'size', 'disabled', 'value', 'name', 'horizontal'];\n  }\n\n  constructor() {\n    super();\n    this._onChange = this._onChange.bind(this);\n    this.attachShadow({ mode: 'open' });\n    this._render();\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('type');\n    this._upgradeProperty('size');\n    this._upgradeProperty('disabled');\n    this._upgradeProperty('value');\n    this._upgradeProperty('name');\n    this._upgradeProperty('horizontal');\n\n    this.addEventListener('change', this._onChange);\n    this._updateRadioButtons();\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('change', this._onChange);\n  }\n\n  attributeChangedCallback() {\n    this._updateState();\n    this._updateRadioButtons();\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n\n  async _render() {\n    if (!this.shadowRoot) return;\n    \n    // 加载CSS\n    const linkElem = document.createElement('link');\n    linkElem.setAttribute('rel', 'stylesheet');\n    linkElem.setAttribute('href', new URL('./uds-radio-group.css', import.meta.url).href);\n    this.shadowRoot.appendChild(linkElem);\n    \n    // 加载HTML模板\n    try {\n      const response = await fetch(new URL('./uds-radio-group.html', import.meta.url).href);\n      const templateText = await response.text();\n      const template = document.createElement('template');\n      template.innerHTML = templateText;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      \n      // 获取元素引用\n      this._container = this.shadowRoot.querySelector('.radio-group');\n      this._updateState();\n    } catch (error) {\n      console.error('Failed to load radio-group template:', error);\n    }\n  }\n\n  _updateState() {\n    if (!this._container) return;\n    \n    // 处理水平布局\n    if (this.hasAttribute('horizontal')) {\n      this._container.classList.add('horizontal');\n    } else {\n      this._container.classList.remove('horizontal');\n    }\n  }\n\n  _updateRadioButtons() {\n    // 获取所有子Radio组件\n    const radioButtons = this.querySelectorAll('uds-radio');\n    \n    // 设置共享属性\n    radioButtons.forEach(radio => {\n      // 如果RadioGroup有type属性，则应用到所有Radio\n      if (this.hasAttribute('type')) {\n        radio.setAttribute('type', this.getAttribute('type'));\n      }\n      \n      // 如果RadioGroup有size属性，则应用到所有Radio\n      if (this.hasAttribute('size')) {\n        radio.setAttribute('size', this.getAttribute('size'));\n      }\n      \n      // 如果RadioGroup有disabled属性，则应用到所有Radio\n      if (this.hasAttribute('disabled')) {\n        radio.setAttribute('disabled', '');\n      }\n      \n      // 设置name属性，确保所有Radio属于同一组\n      if (this.hasAttribute('name')) {\n        radio.setAttribute('name', this.getAttribute('name'));\n      }\n      \n      // 设置选中状态\n      if (this.hasAttribute('value') && radio.getAttribute('value') === this.getAttribute('value')) {\n        radio.setAttribute('checked', '');\n      } else {\n        radio.removeAttribute('checked');\n      }\n    });\n  }\n\n  _onChange(event) {\n    // 确保事件来自子Radio组件\n    if (event.target.tagName.toLowerCase() === 'uds-radio') {\n      const selectedRadio = event.target;\n      \n      // 更新value属性\n      this.value = selectedRadio.value;\n      \n      // 更新其他Radio的选中状态\n      const radioButtons = this.querySelectorAll('uds-radio');\n      radioButtons.forEach(radio => {\n        if (radio !== selectedRadio) {\n          radio.removeAttribute('checked');\n        }\n      });\n      \n      // 触发change事件\n      this.dispatchEvent(new CustomEvent('change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          value: this.value\n        }\n      }));\n    }\n  }\n\n  // Getters/Setters\n  get type() {\n    return this.getAttribute('type');\n  }\n  \n  set type(value) {\n    if (value) {\n      this.setAttribute('type', value);\n    } else {\n      this.removeAttribute('type');\n    }\n  }\n  \n  get size() {\n    return this.getAttribute('size');\n  }\n  \n  set size(value) {\n    if (value) {\n      this.setAttribute('size', value);\n    } else {\n      this.removeAttribute('size');\n    }\n  }\n  \n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  \n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n  \n  get value() {\n    return this.getAttribute('value');\n  }\n  \n  set value(value) {\n    if (value) {\n      this.setAttribute('value', value);\n    } else {\n      this.removeAttribute('value');\n    }\n  }\n  \n  get name() {\n    return this.getAttribute('name');\n  }\n  \n  set name(value) {\n    if (value) {\n      this.setAttribute('name', value);\n    } else {\n      this.removeAttribute('name');\n    }\n  }\n  \n  get horizontal() {\n    return this.hasAttribute('horizontal');\n  }\n  \n  set horizontal(value) {\n    if (value) {\n      this.setAttribute('horizontal', '');\n    } else {\n      this.removeAttribute('horizontal');\n    }\n  }\n}\n\n// 注册组件\ncustomElements.define('uds-radio-group', UdsRadioGroup);\n\nexport default UdsRadioGroup;","// @ts-nocheck\n\n// UDS Checkbox Component\nclass UdsCheckbox extends HTMLElement {\n  static get observedAttributes() {\n    return ['size', 'disabled', 'checked', 'indeterminate', 'name', 'value', 'text', 'ghost', 'outline', 'solid'];\n  }\n\n  constructor() {\n    super();\n    this._container = null;\n    this._input = null;\n    this._onClick = this._onClick.bind(this);\n    this.attachShadow({ mode: 'open' });\n    this._render();\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('type');\n    this._upgradeProperty('size');\n    this._upgradeProperty('disabled');\n    this._upgradeProperty('checked');\n    this._upgradeProperty('indeterminate');\n    this._upgradeProperty('name');\n    this._upgradeProperty('value');\n    this._upgradeProperty('text');\n    this._upgradeProperty('ghost');\n    this._upgradeProperty('outline');\n    this._upgradeProperty('solid');\n\n    this.addEventListener('click', this._onClick);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('click', this._onClick);\n  }\n\n  attributeChangedCallback() {\n    this._updateState();\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n\n  async _render() {\n    if (!this.shadowRoot) return;\n    \n    // 加载CSS\n    const linkElem = document.createElement('link');\n    linkElem.setAttribute('rel', 'stylesheet');\n    linkElem.setAttribute('href', new URL('./uds-checkbox.css', import.meta.url).href);\n    this.shadowRoot.appendChild(linkElem);\n    \n    // 加载HTML模板\n    try {\n      const response = await fetch(new URL('./uds-checkbox.html', import.meta.url).href);\n      const templateText = await response.text();\n      const template = document.createElement('template');\n      template.innerHTML = templateText;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      \n      // 获取元素引用\n      this._container = this.shadowRoot.querySelector('.checkbox-container');\n      this._input = this.shadowRoot.querySelector('.checkbox-input');\n      this._updateState();\n    } catch (error) {\n      console.error('Failed to load checkbox template:', error);\n    }\n  }\n\n  _updateState() {\n    if (!this._container || !this._input) return;\n    \n    // 处理类型\n    this._container.classList.remove('primary', 'secondary', 'danger');\n    if (this.hasAttribute('type')) {\n      const type = this.getAttribute('type');\n      this._container.classList.add(type);\n    } else {\n      this._container.classList.add('primary'); // 默认为primary\n    }\n    \n    // 处理样式\n    this._container.classList.remove('style-text', 'style-ghost', 'style-outline', 'style-solid');\n    if (this.hasAttribute('text')) {\n      this._container.classList.add('style-text');\n    } else if (this.hasAttribute('ghost')) {\n      this._container.classList.add('style-ghost');\n    } else if (this.hasAttribute('outline')) {\n      this._container.classList.add('style-outline');\n    } else if (this.hasAttribute('solid')) {\n      this._container.classList.add('style-solid');\n    } else {\n      this._container.classList.add('style-text'); // 默认为text样式\n    }\n    \n    // 处理尺寸\n    this._container.classList.remove('size-sm', 'size-md', 'size-lg');\n    if (this.hasAttribute('size')) {\n      const size = this.getAttribute('size');\n      this._container.classList.add(`size-${size}`);\n    } else {\n      this._container.classList.add('size-md'); // 默认为md尺寸\n    }\n    \n    // 处理禁用状态\n    if (this.hasAttribute('disabled')) {\n      this._container.classList.add('disabled');\n      this._input.disabled = true;\n    } else {\n      this._container.classList.remove('disabled');\n      this._input.disabled = false;\n    }\n    \n    // 处理选中状态\n    if (this.hasAttribute('checked')) {\n      this._input.checked = true;\n    } else {\n      this._input.checked = false;\n    }\n    \n    // 处理半选状态\n    if (this.hasAttribute('indeterminate')) {\n      this._input.indeterminate = true;\n    } else {\n      this._input.indeterminate = false;\n    }\n    \n    // 处理name和value\n    if (this.hasAttribute('name')) {\n      this._input.name = this.getAttribute('name');\n    }\n    \n    if (this.hasAttribute('value')) {\n      this._input.value = this.getAttribute('value');\n    }\n    \n    // 更新描述\n    this._updateDescription();\n  }\n  \n  \n  _updateDescription() {\n    const descriptionElement = this.shadowRoot.querySelector('.description');\n    if (descriptionElement) {\n      const description = this.getAttribute('description') || '';\n      descriptionElement.textContent = description;\n    }\n  }\n\n  _onClick(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      return;\n    }\n    \n    // 更新选中状态\n    if (this.checked) {\n      this.removeAttribute('checked');\n    } else {\n      this.setAttribute('checked', '');\n    }\n    \n    // 触发change事件\n    const changeEvent = new CustomEvent('change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        checked: this.checked,\n        value: this.value\n      }\n    });\n    this.dispatchEvent(changeEvent);\n  }\n\n  // Getters and Setters\n  get type() {\n    return this.getAttribute('type') || 'primary';\n  }\n  \n  set type(value) {\n    this.setAttribute('type', value);\n  }\n  \n  get size() {\n    return this.getAttribute('size') || 'md';\n  }\n  \n  set size(value) {\n    this.setAttribute('size', value);\n  }\n  \n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  \n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n  \n  get checked() {\n    return this.hasAttribute('checked');\n  }\n  \n  set checked(value) {\n    if (value) {\n      this.setAttribute('checked', '');\n    } else {\n      this.removeAttribute('checked');\n    }\n  }\n  \n  get indeterminate() {\n    return this.hasAttribute('indeterminate');\n  }\n  \n  set indeterminate(value) {\n    if (value) {\n      this.setAttribute('indeterminate', '');\n    } else {\n      this.removeAttribute('indeterminate');\n    }\n  }\n  \n  get name() {\n    return this.getAttribute('name') || '';\n  }\n  \n  set name(value) {\n    this.setAttribute('name', value);\n  }\n  \n  get value() {\n    return this.getAttribute('value') || '';\n  }\n  \n  set value(value) {\n    this.setAttribute('value', value);\n  }\n  \n  get solid() {\n    return this.hasAttribute('solid');\n  }\n  \n  set solid(value) {\n    if (value) {\n      this.setAttribute('solid', '');\n    } else {\n      this.removeAttribute('solid');\n    }\n  }\n  \n  // 自动检测是否有 counter 内容\n  get hasCounter() {\n    const slot = this.shadowRoot.querySelector('slot[name=\"counter\"]');\n    return slot && slot.assignedNodes().length > 0;\n  }\n  \n  // 自动检测是否有描述内容\n  get hasDescription() {\n    return this.getAttribute('description') && this.getAttribute('description').trim() !== '';\n  }\n}\n\n// 注册自定义元素\ncustomElements.define('uds-checkbox', UdsCheckbox);\n\nexport { UdsCheckbox };","// @ts-nocheck\n\n// UDS Checkbox Group Component\nclass UdsCheckboxGroup extends HTMLElement {\n  static get observedAttributes() {\n    return ['type', 'size', 'disabled', 'horizontal', 'all-checked', 'value'];\n  }\n\n  constructor() {\n    super();\n    this._container = null;\n    this._allCheckbox = null;\n    this._onChange = this._onChange.bind(this);\n    this._onAllCheckboxChange = this._onAllCheckboxChange.bind(this);\n    this.attachShadow({ mode: 'open' });\n    this._render();\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('type');\n    this._upgradeProperty('size');\n    this._upgradeProperty('disabled');\n    this._upgradeProperty('horizontal');\n    this._upgradeProperty('value');\n\n    this.addEventListener('change', this._onChange);\n    this._updateCheckboxes();\n    this._updateCheckedStateFromValue();\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('change', this._onChange);\n  }\n\n  attributeChangedCallback(name) {\n    this._updateCheckboxes();\n    \n    if (name === 'value') {\n      this._updateCheckedStateFromValue();\n    }\n  }\n  \n  // 根据 value 属性更新复选框选中状态\n  _updateCheckedStateFromValue() {\n    if (!this.hasAttribute('value')) return;\n    \n    const valueStr = this.getAttribute('value');\n    if (!valueStr) return;\n    \n    const values = valueStr.split(',').map(v => v.trim());\n    const checkboxes = this.querySelectorAll('uds-checkbox');\n    \n    checkboxes.forEach(checkbox => {\n      const checkboxValue = checkbox.getAttribute('value');\n      if (checkboxValue && values.includes(checkboxValue)) {\n        checkbox.checked = true;\n      }\n    });\n    \n    // 如果有全选复选框，更新其状态\n    if (this._allCheckbox) {\n      this._updateAllCheckboxState();\n    }\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n\n  async _render() {\n    if (!this.shadowRoot) return;\n    \n    // 加载CSS\n    const linkElem = document.createElement('link');\n    linkElem.setAttribute('rel', 'stylesheet');\n    linkElem.setAttribute('href', new URL('./uds-checkbox-group.css', import.meta.url).href);\n    this.shadowRoot.appendChild(linkElem);\n    \n    // 加载HTML模板\n    try {\n      const response = await fetch(new URL('./uds-checkbox-group.html', import.meta.url).href);\n      const templateText = await response.text();\n      const template = document.createElement('template');\n      template.innerHTML = templateText;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      \n      // 获取元素引用\n      this._container = this.shadowRoot.querySelector('.checkbox-group');\n      \n      // 如果有全选属性，创建全选复选框\n      if (this.hasAttribute('all-checked')) {\n        this._createAllCheckbox();\n      }\n      \n      this._updateCheckboxes();\n    } catch (error) {\n      console.error('Failed to load checkbox group template:', error);\n    }\n  }\n  \n  // 创建全选复选框\n  _createAllCheckbox() {\n    if (!this._container) return;\n    \n    // 如果已经存在全选复选框，则不重复创建\n    if (this._allCheckbox) return;\n    \n    // 创建全选复选框容器\n    const allCheckboxContainer = document.createElement('div');\n    allCheckboxContainer.classList.add('all-checkbox-container');\n    \n    // 创建全选复选框\n    this._allCheckbox = document.createElement('uds-checkbox');\n    this._allCheckbox.setAttribute('value', 'all');\n    this._allCheckbox.textContent = this.getAttribute('all-text') || '全选';\n    \n    // 应用与组相同的类型和尺寸\n    if (this.hasAttribute('type')) {\n      this._allCheckbox.setAttribute('type', this.getAttribute('type'));\n    }\n    \n    if (this.hasAttribute('size')) {\n      this._allCheckbox.setAttribute('size', this.getAttribute('size'));\n    }\n    \n    // 添加事件监听\n    this._allCheckbox.addEventListener('change', this._onAllCheckboxChange);\n    \n    // 添加到容器\n    allCheckboxContainer.appendChild(this._allCheckbox);\n    this._container.insertBefore(allCheckboxContainer, this._container.firstChild);\n    \n    // 更新全选复选框状态\n    this._updateAllCheckboxState();\n  }\n\n  _updateCheckboxes() {\n    if (!this._container) return;\n    \n    // 处理水平排列\n    if (this.hasAttribute('horizontal')) {\n      this._container.setAttribute('horizontal', '');\n    } else {\n      this._container.removeAttribute('horizontal');\n    }\n    \n    // 获取所有子复选框\n    const checkboxes = this.querySelectorAll('uds-checkbox');\n    \n    // 将组属性应用到子复选框\n    checkboxes.forEach(checkbox => {\n      // 应用类型\n      if (this.hasAttribute('type')) {\n        checkbox.setAttribute('type', this.getAttribute('type'));\n      }\n      \n      // 应用尺寸\n      if (this.hasAttribute('size')) {\n        checkbox.setAttribute('size', this.getAttribute('size'));\n      }\n      \n      // 应用禁用状态\n      if (this.hasAttribute('disabled')) {\n        checkbox.setAttribute('disabled', '');\n      }\n      \n      // 应用name\n      if (this.hasAttribute('name')) {\n        checkbox.setAttribute('name', this.getAttribute('name'));\n      }\n    });\n  }\n\n  _onChange(event) {\n    // 当子复选框状态变化时触发事件\n    if (event.target.tagName.toLowerCase() === 'uds-checkbox') {\n      // 如果有全选复选框，更新其状态\n      if (this._allCheckbox && event.target !== this._allCheckbox) {\n        this._updateAllCheckboxState();\n      }\n      \n      const changeEvent = new CustomEvent('change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          values: this.values\n        }\n      });\n      this.dispatchEvent(changeEvent);\n    }\n  }\n  \n  // 全选复选框状态变化处理\n  _onAllCheckboxChange(event) {\n    // 阻止事件冒泡，防止重复触发\n    event.stopPropagation();\n    \n    // 获取当前全选复选框的状态\n    const isChecked = event.target.checked;\n    \n    // 获取所有子复选框（排除全选复选框）\n    const checkboxes = Array.from(this.querySelectorAll('uds-checkbox')).filter(checkbox => \n      checkbox !== this._allCheckbox\n    );\n    \n    // 设置所有非禁用子复选框的选中状态\n    checkboxes.forEach(checkbox => {\n      if (!checkbox.disabled) {\n        checkbox.checked = isChecked;\n      }\n    });\n    \n    // 手动设置全选复选框的状态，避免自动更新导致的问题\n    this._allCheckbox.checked = isChecked;\n    this._allCheckbox.indeterminate = false;\n    \n    // 延迟更新全选复选框状态，考虑禁用选项\n    setTimeout(() => {\n      this._updateAllCheckboxState();\n    }, 10);\n    \n    // 触发变更事件\n    const changeEvent = new CustomEvent('change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        values: this.values,\n        allChecked: isChecked\n      }\n    });\n    this.dispatchEvent(changeEvent);\n  }\n  \n  // 更新全选复选框状态\n  _updateAllCheckboxState() {\n    if (!this._allCheckbox) return;\n    \n    // 获取所有子复选框（排除全选复选框）\n    const checkboxes = Array.from(this.querySelectorAll('uds-checkbox')).filter(checkbox => \n      checkbox !== this._allCheckbox\n    );\n    \n    // 统计禁用和非禁用复选框的数量及选中状态\n    let totalEnabled = 0;\n    let totalCheckedEnabled = 0;\n    let totalDisabled = 0;\n    let totalCheckedDisabled = 0;\n    \n    checkboxes.forEach(checkbox => {\n      if (checkbox.disabled) {\n        totalDisabled++;\n        if (checkbox.checked) {\n          totalCheckedDisabled++;\n        }\n      } else {\n        totalEnabled++;\n        if (checkbox.checked) {\n          totalCheckedEnabled++;\n        }\n      }\n    });\n    \n    // 根据统计结果设置全选复选框的状态\n    if (totalEnabled === 0) {\n      // 如果没有非禁用复选框，则全选复选框状态取决于禁用复选框\n      this._allCheckbox.checked = totalCheckedDisabled === totalDisabled;\n      this._allCheckbox.indeterminate = totalCheckedDisabled > 0 && totalCheckedDisabled < totalDisabled;\n    } else {\n      // 如果有非禁用复选框，则全选复选框状态取决于非禁用复选框\n      this._allCheckbox.checked = totalCheckedEnabled === totalEnabled;\n      \n      // 如果有禁用且未选中的复选框，则显示为半选状态\n      if (totalCheckedEnabled === totalEnabled && totalDisabled > 0 && totalCheckedDisabled < totalDisabled) {\n        this._allCheckbox.indeterminate = true;\n        this._allCheckbox.checked = false;\n      } else {\n        this._allCheckbox.indeterminate = totalCheckedEnabled > 0 && totalCheckedEnabled < totalEnabled;\n      }\n    }\n  }\n\n  // Getters and Setters\n  get type() {\n    return this.getAttribute('type') || 'primary';\n  }\n  \n  set type(value) {\n    this.setAttribute('type', value);\n  }\n  \n  get size() {\n    return this.getAttribute('size') || 'md';\n  }\n  \n  set size(value) {\n    this.setAttribute('size', value);\n  }\n  \n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  \n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n  \n  get horizontal() {\n    return this.hasAttribute('horizontal');\n  }\n  \n  set horizontal(value) {\n    if (value) {\n      this.setAttribute('horizontal', '');\n    } else {\n      this.removeAttribute('horizontal');\n    }\n  }\n  \n  get name() {\n    return this.getAttribute('name') || '';\n  }\n  \n  set name(value) {\n    this.setAttribute('name', value);\n  }\n  \n  get allChecked() {\n    return this.hasAttribute('all-checked');\n  }\n  \n  set allChecked(value) {\n    if (value) {\n      this.setAttribute('all-checked', '');\n      if (!this._allCheckbox) {\n        this._createAllCheckbox();\n      }\n    } else {\n      this.removeAttribute('all-checked');\n      if (this._allCheckbox) {\n        this._allCheckbox.parentNode.remove();\n        this._allCheckbox = null;\n      }\n    }\n  }\n  \n  get allText() {\n    return this.getAttribute('all-text') || '全选';\n  }\n  \n  set allText(value) {\n    this.setAttribute('all-text', value);\n    if (this._allCheckbox) {\n      this._allCheckbox.textContent = value;\n    }\n  }\n  \n  get values() {\n    const values = [];\n    const checkboxes = this.querySelectorAll('uds-checkbox');\n    checkboxes.forEach(checkbox => {\n      if (checkbox.checked && checkbox.value !== 'all') {\n        values.push(checkbox.value);\n      }\n    });\n    return values;\n  }\n}\n\n// 注册自定义元素\ncustomElements.define('uds-checkbox-group', UdsCheckboxGroup);\n\nexport { UdsCheckboxGroup };","// Main entry point for Universal UI\nimport './components/button/uds-button.js';\nimport './components/radio/uds-radio.js';\nimport './components/radio/uds-radio-group.js';\nimport './components/checkbox/uds-checkbox.js';\nimport './components/checkbox/uds-checkbox-group.js';\n\n// 导出所有组件\nexport * from './components/button/uds-button.js';\nexport * from './components/radio/uds-radio.js';\nexport * from './components/radio/uds-radio-group.js';\nexport * from './components/checkbox/uds-checkbox.js';\nexport * from './components/checkbox/uds-checkbox-group.js';\n\nconsole.log('Universal UI initialized');\n\n"],"names":["UdsButton","__publicField","prop","value","linkElem","templateText","template","error","variant","type","event","slot","UdsRadio","size","descriptionElement","description","UdsRadioGroup","radio","selectedRadio","UdsCheckbox","changeEvent","UdsCheckboxGroup","name","valueStr","values","v","checkbox","checkboxValue","allCheckboxContainer","isChecked","checkboxes","totalEnabled","totalCheckedEnabled","totalDisabled","totalCheckedDisabled"],"mappings":"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"}